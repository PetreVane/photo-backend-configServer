# Server port it assigned to 0 because in this case, the app should start on a random port number
# This is useful when starting multiple instances if this microservice -> avoids port conflicts
# Assigns the port number passed as cmd line argument. If not provided, assign 0 -> generate a random port
server.port = ${PORT:0}
spring.application.name = users-ms


# Each instance of this app needs an identifier. This is how you can add one. ${random.value} does exactly what the name says
eureka.instance.instance-id = ${spring.application.name}:${spring.application.instance_id:${random.value}}



## Enables the H2 console when connecting via a gateway
spring.h2.console.enable=true
spring.h2.console.settings.web-allow-others=true
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect


# MySQL Database connection properties
spring.datasource.url=jdbc:mysql://192.168.1.136:3000/photo-backend?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update

# Exception handling
server.error.include-stacktrace=never

# Gateway Ip address
gateway.ip = 192.168.1.136/24
# Security
# token expiration_time is in milliseconds and is equivalent to 10 days: 864000000
token.expiration_time = 86400000


login.url.path = /users/login
api.users.actuator.url.path=/users-ms/actuator/**
api.gateway.actuator.url.path=/actuator/**

# Actuator
management.endpoints.web.exposure.include=*

#
